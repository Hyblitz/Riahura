<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sGUIStaminaBar</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>

//num = 0

spr = "";
global.num =  0;

//num = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if mouse_check_button_pressed(mb_left)
{
    //PathCresent = path_add();
    StartX = x;
    StartY = y;
    path_clear_points(PathCresent);
    
    path_insert_point(PathCresent,0, x,y, 100);
    
    path_insert_point(PathCresent,1,
    x + lengthdir_x(point_distance(x,y,mouse_x,mouse_y)/2,point_direction(x,y,mouse_x,mouse_y))
    + sin(point_direction(x,y,mouse_x,mouse_y)*pi/180)*300
    ,
    y + lengthdir_y(point_distance(x,y,mouse_x,mouse_y)/2,point_direction(x,y,mouse_x,mouse_y))
    - cos(point_direction(x,y,mouse_x,mouse_y)*pi/180)*300
    , 100);
    
    path_insert_point(PathCresent,2, mouse_x,mouse_y, 100);
    
    path_set_kind(PathCresent, 1);
    path_set_precision(PathCresent,6);
    path_set_closed(PathCresent, false); 
    path_start(PathCresent,24,path_action_stop,true);
    
}
if mouse_check_button_pressed(mb_right)
{
    game_restart();
}





if keyboard_check(vk_control) &amp;&amp; keyboard_check_pressed(ord("Z"))
{
    screen_save(working_directory + "\Screens\Screen_"+string(global.num)+".png")
    screen = sprite_add(working_directory + "\Screens\Screen_"+string(global.num)+".png",1,false,false,0,0);
    sprite_index = screen;
    global.num += 1;
}

if keyboard_check_pressed(ord("S"))
{
    if file_exists("Save.sav")
    {
        file_delete("Save.sav");
    }
    
    var SaveFile = file_text_open_write("Save.sav");
    var SavedRoom = room;
    var Savednum = global.num;
    file_text_write_real(SaveFile,SavedRoom);
    file_text_write_real(SaveFile,Savednum);
    file_text_close(SaveFile);
}




</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_colour(c_aqua);
draw_circle(x,y,5,false);
draw_set_colour(c_red);
draw_circle(mouse_x,mouse_y,5,false);

draw_set_colour(c_white)
if path_exists(PathCresent)
{
    path_set_precision(PathCresent,6);
    draw_path(PathCresent,x,y,true);
}
else
{

}
if global.num = 0
{
    draw_background(bgTitleScreen,0,0);   
}
draw_sprite(sRiahuraWalkDown,0,StartX,StartY);

draw_sprite_ext(sprite_index,image_index,0,0,.2,.2,0,c_white,1);
draw_rectangle(0,0,view_wview/5,view_hview/5,true);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
