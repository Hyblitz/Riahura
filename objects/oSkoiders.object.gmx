<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sSpiritEaterFly</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>oCreatureParent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_speed = 0;
phy_fixed_rotation = true;

/*a = instance_create(x,y,oPlayerMask);
a.ID = id;*/

Bubble = false;
BubbleFloat = 0;
StartY = -1;
i = 0;
AttackRange = 40;
MoveRange = 350;

State = "Idle"
HP = 5;

alarm[1] = 30*3;
alarm[11] = 1;
alarm[10] = 1;
i = 0;

KnockOff = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///placeholder length for step shake

oRama.Health -= 6;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///placeholder length for step shake

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>State = "Attack";
image_index = 0;


alarm[1] = 30*choose(3,4,5);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///placeholder length for step shake

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Stuff

/*if image_index = 1 || image_index = 3
{
    if alarm[0] = -1
    {
        instance_create(x,y,oScreenShake);
        alarm[0] = 30*4.5;
    }
}

//Hit
if physics_test_overlap(x,y,0,oMeleeAttack)
{
    instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if place_meeting(x,y,oBullet)
{
    a = instance_nearest(x,y,oBullet)
    if a.Type = 7
    {
        physics_apply_impulse(x,y,lengthdir_x(1000,point_direction(a.x,a.y,x,y)),lengthdir_y(1000,point_direction(a.x,a.y,x,y)))
        if HP &gt; a.Damage
        {
            State = "Hurt"
            HP -= a.Damage;
        }
        else
        {
            State = "Dead"
        }
    }
    else
    {
        if a.Type = 1
        {
            Bubble = true;
            BubbleFloat = 0;
            StartY = phy_position_y;
            with(a)
            {
                instance_destroy();
            }
        }
        else
        {
            if a.Type = 2
            {
                physics_apply_impulse(x,y,lengthdir_x(10000,point_direction(oRama.x,oRama.y,x,y)),lengthdir_y(10000,point_direction(oRama.x,oRama.y,x,y)))
                State = "Hurt"
                //HP -= a.Damage;
                image_index = 0;/*if HP &gt; a.Damage
                {
                    State = "Hurt"
                    HP -= a.Damage;
                    image_index = 0;
                    
                }
                else
                {
                    State = "Dead"
                }*/
                    
                
            }
        }
    }
}
if place_meeting(x,y,oRama)
{
    if oRama.State = "Kicking"  &amp;&amp; alarm[0] = -1
    {
        physics_apply_impulse(x,y,lengthdir_x(5000,point_direction(oRama.x,oRama.y,x,y)),lengthdir_y(10000,point_direction(oRama.x,oRama.y,x,y)))
        if State != "Hurt" &amp;&amp; State != "Dead"
        {
            State = "Hurt";
            HP -= 1;
            alarm[0] = 15;
            instance_create(x,y,oScreenShake);
            audio_play_sound(sndImpact,3,false);
        }
        
    }
}
if HP &lt;= 0
{
    State = "Dead"
}


if Bubble = false
{
    depth = -phy_position_y;
}
else
{
    depth = -StartY
}


if Bubble = true
{
    phy_active = false;
    BubbleFloat += pi/60;
    phy_position_y = StartY - sin(BubbleFloat)*120;
    
    if BubbleFloat = 1*pi || (phy_position_y &lt;= StartY +.1 &amp;&amp; phy_position_y &gt;= StartY - .1)
    {
        Bubble = false;
        //State = "Dead";
        image_index = 0;
    }
}
else
{
    phy_active = true;
}
if State != "Dead" &amp;&amp; State != "Hurt" &amp;&amp; State != "Attack"
{
    sprite_index = sSpiritEaterFly;
    image_speed = .5;
}
if State = "Hurt"
{
    //if Dir = "Down"
    {
  
        sprite_index = sSpiritEaterHit;
        image_speed = .5;
    }
}

/*if State = "Hurt"
{
    if Dir = "Down"
    {
        sprite_index = sSkoiderHitDown;
        
    }
    if Dir = "DownRight"
    {
        sprite_index = sSkoiderHitDownRight;
        
    }
    if Dir = "DownLeft"
    {
        sprite_index = sSkoiderHitDownLeft;
        
    }
    if Dir = "Right"
    {
        sprite_index = sSkoiderHitRight;
        
    }
    if Dir = "Left"
    {
        sprite_index = sSkoiderHitLeft;
        
    }
    if Dir = "Up"
    {
        sprite_index = sSkoiderHitUp;
        
    }
    if Dir = "UpRight"
    {
        sprite_index = sSkoiderHitUpRight;
        
    }
    if Dir = "UpLeft"
    {
        sprite_index = sSkoiderHitUpLeft;
        
    }
    image_speed = .5;
}*/
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Moving

if distance_to_object(oRama) &lt; MoveRange &amp;&amp; distance_to_object(oRama) &gt; AttackRange 
{
    physics_apply_impulse(x,y,lengthdir_x(1000,point_direction(x,y,oRama.x,oRama.y)),lengthdir_y(1000,point_direction(x,y,oRama.x,oRama.y)))
}

if State = "Dead"
{
    if image_index = 0
    {
        audio_play_sound(sndSlimeDeath,0,false);
    }
    sprite_index = sSpiritEaterDeath;
    image_speed = .5;
    oRama.RunMult = 1.5;
}
if State != "Attack"
{
    if oRama.x &gt; x
    {
        image_xscale = -1;
    }
    else
    {
        image_xscale = 1;
    }
}
if State = "Attack"
{
    sprite_index = sSpiritEaterEat;
    
    if place_meeting(x,y,oRama)
    {
        if sprite_index = sSpiritEaterEat &amp;&amp; image_index = 2
        {
            with(oRama)
            {
                RunMult = .7;            
            }
            if alarm[11] = -1
            {
                alarm[11] = 30;
                alarm[10] = 30*4; //Default if they still don't get him off  
                image_index = 2;
                image_speed = 0; 
            }
            if alarm[10] = 0
            {
                HP = 0;
                State = "Dead";
                
            }
            i ++;
            phy_position_x = oRama.phy_position_x+40*image_xscale+sin(i)/2;
            phy_position_y = oRama.phy_position_y-25+sin(i)/2;
            depth = oRama.depth -1;
            
            if keyboard_check_pressed(ord("Z")) || keyboard_check_pressed(ord("Q")) || keyboard_check_pressed(ord("D")) || keyboard_check_pressed(ord("S"))
            {
                KnockOff ++;
                if KnockOff &gt;= 20
                {
                    State = "Dead";
                    oRama.RunMult = 1.5;
                }
            }
            
        }
    }
    else
    {
        if alarm[11] = -1
        {
            image_speed = .5;
        }
    }
    

}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="oSkoiders">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Collision

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="oRobot">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Collision

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>



if State = "Hurt" || State = "Attack"
{
    State = "Idle"
    image_index = 0;
    sprite_index = sSpiritEaterFly;
    oRama.RunMult = 1.5;
}
if State = "Dead"
{
    instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self()

if Bubble = true
{
    draw_sprite_ext(sShadow,1,phy_position_x,StartY,2,((phy_position_y-StartY+100)/100)*2,0,c_white,1);
    draw_sprite(sBubble,0,phy_position_x,phy_position_y);
}
else
{
    //draw_sprite_ext(sShadow,1,phy_position_x,phy_position_y + 20,2,1,0,c_white,1);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>-1</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>20</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>10</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>10</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>64,92</point>
    <point>18,73</point>
  </PhysicsShapePoints>
</object>
