<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sPurpIdleDown</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>oCreatureParent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Par = 3
HP = 5;
State = "Idle"; //Idle, Bounce, Death
Bubble = false;
image_speed = .25;
MoveRange = 500;
AttackRange = 100;
alarm[0] = 1;
alarm[2] = 1;
alarm[10] = 1;
alarm[1] = 30*1;
phy_fixed_rotation = true;
alarm[11] = 15; //spawn time
image_xscale = 1;
image_yscale = 1;
ID = -1;
XScale = 1;
Spawn = "";
//physics_apply_impulse(x,y,100*choose(-100,-50,0,50,100),100*choose(-100,-50,0,50,100))
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if ID != -1
{
    with(oMBSpiritEater)
    {
        SpawnedCreatures --;
    }
}

if Spawn = "Portal1"
{
    with(oFirstRoundPortal)
    {
        Creatures --;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Placeholder

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Placeholder

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Placeholder

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Placeholder

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Placeholder

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Garbage
if place_meeting(x,y,oBullet) &amp;&amp; alarm[1] = -1
{
    a = instance_nearest(x,y,oBullet)
    if a.Type = 7
    {
        physics_apply_impulse(x,y,lengthdir_x(1000,point_direction(a.x,a.y,x,y)),lengthdir_y(1000,point_direction(a.x,a.y,x,y)))
        if HP &gt; 1
        {
            State = "Hurt"
            HP -= 1;
        }
        else
        {
            State = "Dead"
        }
    }
    else
    {
        if a.Type = 2
        {
            Bubble = true;
            BubbleFloat = 0;
            StartY = phy_position_y;
            with(a)
            {
                instance_destroy();
            }
        }
        else
        {
            if a.Type = 3 || a.Type = 4
            {
                physics_apply_impulse(x,y,lengthdir_x(10000,point_direction(oRama.x,oRama.y,x,y)),lengthdir_y(10000,point_direction(oRama.x,oRama.y,x,y)))
                State = "Hurt"
                HP -= a.Damage;
                image_index = 0;/*if HP &gt; a.Damage
                {
                    State = "Hurt"
                    HP -= a.Damage;
                    image_index = 0;
                    
                }
                else
                {
                    State = "Dead"
                }*/
                    with(a)
                    {
                        instance_destroy();
                    }
                
            }
        }
    }
}
if place_meeting(x,y,oRama)
{
    if oRama.State = "Kicking" &amp;&amp; oRama.image_index &gt; 2 &amp;&amp; oRama.image_index &lt;= oRama.image_number &amp;&amp; alarm[0] = -1
    {
        //physics_apply_impulse(x,y,lengthdir_x(5000,point_direction(oRama.x,oRama.y,x,y)),lengthdir_y(10000,point_direction(oRama.x,oRama.y,x,y)))
        if State != "Hurt" &amp;&amp; State != "Dead"
        {
            State = "Hurt";
            HP -= 1;
            alarm[0] = 15;
            instance_create(x,y,oScreenShake);
        }
        
    }
}
if HP &lt;= 0
{
    State = "Dead"
}

if Bubble = false
{
    depth = -phy_position_y;
}
else
{
    depth = -StartY
}


if Bubble = true
{
    phy_active = false;
    BubbleFloat += pi/60;
    phy_position_y = StartY - sin(BubbleFloat)*120;
    
    if BubbleFloat = 1*pi || (phy_position_y &lt;= StartY +.1 &amp;&amp; phy_position_y &gt;= StartY - .1)
    {
        Bubble = false;
        State = "Dead";
        image_index = 0;
    }
}
else
{
    phy_active = true;
}

if State = "Dead"
{
    sprite_index = sPurpDie;
    image_speed = .5;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Moving

if distance_to_object(oRama) &lt; MoveRange &amp;&amp; alarm[0] = -1 &amp;&amp; distance_to_object(oRama) &gt; AttackRange &amp;&amp; sprite_index != sPurpDie
{
    physics_apply_impulse(x,y,lengthdir_x(500,point_direction(x,y,oRama.x,oRama.y)),lengthdir_y(500,point_direction(x,y,oRama.x,oRama.y)))
    sprite_index = sPurpIdleDown;
}

if distance_to_object(oRama) &lt;= AttackRange  &amp;&amp; sprite_index != sPurpDie
{
    if alarm[2] = -1
    {
        alarm[2] = 30*1;
        sprite_index = sPurpSlash;
        image_speed = .5;
        physics_apply_impulse(x,y,lengthdir_x(1000000,point_direction(x,y,oRama.x,oRama.y)),lengthdir_y(1000000,point_direction(x,y,oRama.x,oRama.y)))
        
    }

}

if oRama.x &gt; x
{
    image_xscale = XScale*-1;
}
else
{
    image_xscale = XScale;
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Hitting the Player

if place_meeting(x,y,oRama)
{
    if /*image_index &gt;= 2 &amp;&amp;*/  sprite_index = sPurpSlash &amp;&amp; alarm[10] = -1
    {   
        oRama.Health -= 2
        alarm[10] = 30*2;
    }
}

if place_meeting(x,y,oRama)
{
    if oRama.State = "Kicking"
    {
    
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="oSlime">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Collision
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if State = "Dead"
{
    instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
draw_self();

if Bubble = true
{
    draw_sprite_ext(sShadow,1,phy_position_x,StartY,2,((phy_position_y-StartY+100)/100)*2,0,c_white,1);
    draw_sprite(sBubble,0,phy_position_x,phy_position_y);
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>-1</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>1</PhysicsObjectShape>
  <PhysicsObjectDensity>40</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>10</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>10</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>16,80</point>
    <point>52,80</point>
    <point>52,96</point>
    <point>16,96</point>
  </PhysicsShapePoints>
</object>
