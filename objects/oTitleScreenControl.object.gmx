<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sPurpleButterfly</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-100</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*randomize();

RandomX = irandom(room_width);
RandomY = irandom(room_height);

    Sname = part_system_create();
    particle1 = part_type_create();
    part_type_shape(particle1,pt_shape_flare);
    part_type_size(particle1,1,1,0,1);
    part_type_scale(particle1,0.50,1);
    part_type_color3(particle1,8454016,8453888,16777088);
    part_type_alpha3(particle1,0.73,0.60,0.01);
    part_type_speed(particle1,4.03,1,0,0);
    part_type_direction(particle1,0,261,0,0);
    part_type_gravity(particle1,0,270);
    part_type_orientation(particle1,0,359,0,0,1);
    part_type_blend(particle1,1);
    part_type_life(particle1,0,94);
    
    emitter1 = part_emitter_create(Sname);
    part_emitter_region(Sname,emitter1,RandomX,RandomX,RandomY,RandomY,0,0);
    part_emitter_burst(Sname,emitter1,particle1,5);
    
    Sname2 = part_system_create();
    particle2 = part_type_create();
    part_type_shape(particle2,pt_shape_sphere);
    part_type_size(particle2,1,1,0,0);
    part_type_scale(particle2,0.50,0.50);
    part_type_color3(particle2,16777215,16777088,16744448);
    part_type_alpha3(particle2,0.85,0.51,0.00);
    part_type_speed(particle2,1,1,0,5);
    part_type_direction(particle2,0,359,0,0);
    part_type_gravity(particle2,0,270);
    part_type_orientation(particle2,0,359,0,0,1);
    part_type_blend(particle2,0);
    part_type_life(particle2,0,15);
    
    
    emitter2 = part_emitter_create(Sname2);
    part_emitter_region(Sname2,emitter2,RandomX,RandomX,RandomY,RandomY,0,0);
    part_emitter_burst(Sname2,emitter2,particle2,5);
    
    
alarm[0] = 10+irandom(20);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*if keyboard_check_pressed(vk_anykey)
{
    room_goto(rmGame);
}*/
if mouse_check_button_pressed(mb_left)
{
    //audio_play_sound(snd_cursor,0,false);
}   
if keyboard_check_pressed(vk_backspace)
{
    if window_get_fullscreen()
    {
        window_set_fullscreen(false);
    }
    else
    {
        window_set_fullscreen(true);
    }
}
if Pressed != 0
{
    if keyboard_check_pressed(vk_enter)
    {
        Pressed = 0;
        with(oTSButtons)
        {
            alarm[0] = 1;
        }
    }
}

if keyboard_check(vk_control) &amp;&amp; keyboard_check_pressed(ord("Z"))
{
    screen_save(working_directory + "\Screens\Screen_"+string(global.num)+".png")
    screen = sprite_add(working_directory + "\Screens\Screen_"+string(global.num)+".png",1,false,false,0,0);
    sprite_index = screen;
    global.num += 1;
}

if Pressed = 2
{
    if keyboard_check_pressed(vk_up)
    {
        if PressedPart2 &lt; 2
        {
            PressedPart2 ++;
        }
        else
        {
            PressedPart2 = 0;
        }
    }
    if keyboard_check_pressed(vk_down)
    {
        if PressedPart2 &gt; 0
        {
            PressedPart2 --;
        }
        else
        {
            PressedPart2 = 2;
        }
    }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if audio_is_playing(snd_title)
{
    audio_stop_all();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Game Setup

/*snd = audio_create_stream("C:\Users\Alex\Dropbox\[Riahura\.gmx\TitleScreen.ogg");
audio_play_sound(snd,1,true)
audio_sound_gain(snd,10,0);*/

Pressed = 0;
PressedPart2 = 0;
a = 0;
alarm[0] = choose(10,20,30);
Hover = false;
global.num = 0;

//snd = audio_create_stream(/*'C:\Users\Michael\Desktop\Music and Sfx\Nartikam.ogg'*/working_directory + "\data-files\TitleScreen.ogg");
audio_play_sound(snd_title, 10, true);
spr0 = sprite_add(working_directory + "\Screens\Screen_0.png", 1, true, true, 0, 0); 
spr1 = sprite_add(working_directory + "\Screens\Screen_1.png", 1, true, true, 0, 0); 
spr2 = sprite_add(working_directory + "\Screens\Screen_2.png", 1, true, true, 0, 0); 

a = instance_create(irandom(room_width-200)+50,irandom(room_height-200)+50,oTSMover);
a.alarm[0] = 1;
a.alarm[1] = irandom(30);

a = instance_create(irandom(room_width-200)+50,irandom(room_height-200)+50,oTSMover);
a.alarm[0] = 1;
a.alarm[1] = irandom(30);

/*if file_exists("Save.sav")
{
    var LoadFile = file_text_open_read("Save.sav");
    var LoadedRoom = file_text_read_real(LoadFile);
    var LoadNum = file_text_read_real(LoadFile);
    file_text_close(LoadFile);
    room_goto(LoadedRoom);
    instance_create(200,200,oRealmBlockZone)
    global.num =  LoadNum;
}
else
{
    global.num =  0;
    room_goto(rmGame);
}*/

for(i = 0; i &lt;= 4; i ++)
{
    a = instance_create(0,0,oTSButtons);
    a.Button = i;
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_colour(c_white);

if Pressed = 0
{
    a += .075;
    draw_background(bgTitleScreen,0,0);
    draw_sprite(sTSTitle,0,0,2*cos(a));
}
else
{
    draw_background(bgTS,0,0);
    if Pressed = 1
    {
        for(i = 0; i &lt;= 2; i ++)
        {
            draw_sprite_ext(spr1,0,view_xview+view_wview/2,view_yview+view_hview/2-view_hview*.25 + (view_hview/10+32)*i,.1,.1,0,c_white,1);
        }
    }
    
    if Pressed = 2
    {
        /*draw_text(view_xview+20,view_yview+20,"[1]Controls [2] Video [3] Audio")
        if keyboard_check_pressed(ord('1'))
        {
            PressedPart2 = 1;
        }
        if keyboard_check_pressed(ord('2'))
        {
            PressedPart2 = 2;
        }
        if keyboard_check_pressed(ord('3'))
        {
            PressedPart2 = 3;
            a = 0;
        }   
        if PressedPart2 = 1
        {
            draw_text(view_xview+60,view_yview+30,"Keyboard         Controller");
            draw_text(view_xview+20,view_yview+50,"Move Up: " + string(global.MoveUp) + "           "  + string(global.MoveUpController) + "#Move Down: "  + string(global.MoveDown) + "           "  + string(global.MoveDownController) )
        }
        if PressedPart2 = 2
        {
            draw_text(view_xview+20,view_yview+50,"Fullscreen: " + string(window_get_fullscreen()));
        }*/
        if PressedPart2 = 0
        {
            draw_set_halign(fa_left);
            draw_sprite(sOptions,0,0,0);
            draw_sprite(sOptions,1,0,0);
            draw_sprite(sOptions,2,0,0);
            draw_sprite(sOptions,3,0,0);
            draw_sprite(sOptions,4,0,0);
            draw_sprite(sOptionsUIBar,1,531,261);
            draw_sprite(sOptionsUIBar,1,531,313);
            draw_sprite(sOptionsUIBar,1,531,364);
            draw_sprite(sOptionsUIBar,1,531,466);
            draw_sprite(sOptionsUIBar,0,531+5,261);
            draw_sprite(sOptionsUIBar,0,531+5,313);
            draw_sprite(sOptionsUIBar,0,531+5,364);
            draw_sprite(sOptionsUIBar,0,531+5,466);
            
            draw_sprite(sOptionsUIBar,2,531+5+sprite_get_width(sOptionsUIBar),261);
            draw_sprite(sOptionsUIBar,2,531+5+sprite_get_width(sOptionsUIBar),313);
            draw_sprite(sOptionsUIBar,2,531+5+sprite_get_width(sOptionsUIBar),364);
            draw_sprite(sOptionsUIBar,2,531+5+sprite_get_width(sOptionsUIBar),466);
        }
        if PressedPart2 = 1
        {
            draw_sprite(sControls,0,0,0);
        }
    }
    if Pressed = 3
    {
        a += .075;
        draw_sprite(sTSTitle,0,0,2*cos(a));
        draw_set_halign(fa_center);
        draw_set_valign(fa_middle);
        draw_text(view_xview+view_wview/2,view_yview+view_hview/2+200,"Lead Programmer: Michael Trezza###Lead Graphics Designer: Rachid Riko###Concept Artist: Adam Clifton###Special Thanks To: Oray Studios"); 
        draw_set_halign(fa_left);
        draw_set_valign(fa_top);
    }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
