<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sRiahuraDashDown</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>alarm[0] = 2;
alarm[1] = 3;
alarm[2] = 4;
alarm[3] = 5;
alarm[4] = 6;
alarm[5] = 7;
alarm[6] = 8;
alarm[7] = 9;
alarm[8] = 10;
alarm[9] = 11;

Dir = "Down"
alarm[10] = 1;
image_speed = 0;
alarm[11] = 1;
audio_play_sound(sndDashSound,0,false);
audio_sound_gain(sndDashSound,.5,0);
//audio_sound_pitch(sndDashSound,0);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if Dir = "Up"
{
    sprite_index = sRiahuraDashUp;
}
if Dir = "UpRight"
{
    sprite_index = sRiahuraDashUpRight;
}
if Dir = "UpLeft"
{
    sprite_index = sRiahuraDashUpLeft;
}
if Dir = "Down"
{
    sprite_index = sRiahuraDashDown;
}
if Dir = "DownRight"
{
    sprite_index = sRiahuraDashDownRight;
}
if Dir = "DownLeft"
{
    sprite_index = sRiahuraDashDownLeft;
}

if Dir = "Right"
{
    sprite_index = sRiahuraDashRight;
}
if Dir = "Left"
{
    sprite_index = sRiahuraDashLeft;
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>FinalX = oRama.phy_position_x;
FinalY = oRama.phy_position_y;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="9">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///asldfkj
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="8">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///asldfkj
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///asldfkj
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="6">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///asldfkj
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///asldfkj
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///asldfkj
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///asldfkj
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///asldfkj
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///asldfkj
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///asldfkj
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>depth = -y;

if i = 0 &amp;&amp; alarm[11] = -1
{
    image_speed = .75;
}
/*if i = 1 &amp;&amp; alarm[0] = -1
{
    image_speed = .75;
}
if i = 2 &amp;&amp; alarm[1] = -1
{
    image_speed = .75;
}
if i = 3 &amp;&amp; alarm[2] = -1
{
    image_speed = .75;
}*/
if i != 0
{
    if alarm[i -1] = -1
    {
        image_speed = .75;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//if Dir != "Up" 

    if i = 0 &amp;&amp; alarm[11] = -1
    {
        draw_set_alpha(.2)
        draw_sprite_ext(sprite_index,image_speed,x,y,1,1,0,c_aqua,.2);
    }
    if i = 1 &amp;&amp; alarm[0] = -1
    {
        //draw_sprite_ext(sprite_index,image_speed,x+lengthdir_x(1*point_distance(x,y,FinalX,FinalY)/8,point_direction(x,y,FinalX,FinalY)),y+lengthdir_y(1*point_distance(x,y,FinalX,FinalY)/8,point_direction(x,y,FinalX,FinalY)),1,1,0,c_aqua,.75);
    }
    if i = 2 &amp;&amp; alarm[1] = -1
    {
        draw_set_alpha(.4)
        draw_sprite_ext(sprite_index,image_speed,x+lengthdir_x(2*point_distance(x,y,FinalX,FinalY)/8,point_direction(x,y,FinalX,FinalY)),y+lengthdir_y(2*point_distance(x,y,FinalX,FinalY)/8,point_direction(x,y,FinalX,FinalY)),1,1,0,c_aqua,.4);
    }
    if i = 3 &amp;&amp; alarm[2] = -1
    {
        //draw_sprite_ext(sprite_index,image_speed,x+lengthdir_x(3*point_distance(x,y,FinalX,FinalY)/8,point_direction(x,y,FinalX,FinalY)),y+lengthdir_y(3*point_distance(x,y,FinalX,FinalY)/8,point_direction(x,y,FinalX,FinalY)),1,1,0,c_aqua,.75);
    }
    if i = 4 &amp;&amp; alarm[3] = -1
    {
        draw_set_alpha(.6);
        draw_sprite_ext(sprite_index,image_speed,x+lengthdir_x(4*point_distance(x,y,FinalX,FinalY)/8,point_direction(x,y,FinalX,FinalY)),y+lengthdir_y(4*point_distance(x,y,FinalX,FinalY)/8,point_direction(x,y,FinalX,FinalY)),1,1,0,c_aqua,.6);
    }
    if i = 5 &amp;&amp; alarm[4] = -1
    {
        //draw_sprite_ext(sprite_index,image_speed,x+lengthdir_x(5*point_distance(x,y,FinalX,FinalY)/8,point_direction(x,y,FinalX,FinalY)),y+lengthdir_y(5*point_distance(x,y,FinalX,FinalY)/8,point_direction(x,y,FinalX,FinalY)),1,1,0,c_aqua,.75);
    }
    if i = 6 &amp;&amp; alarm[5] = -1
    {
        draw_set_alpha(.8)
        draw_sprite_ext(sprite_index,image_speed,x+lengthdir_x(6*point_distance(x,y,FinalX,FinalY)/8,point_direction(x,y,FinalX,FinalY)),y+lengthdir_y(6*point_distance(x,y,FinalX,FinalY)/8,point_direction(x,y,FinalX,FinalY)),1,1,0,c_aqua,.8);
    }
    if i = 7 &amp;&amp; alarm[6] = -1
    {
        //draw_sprite_ext(sprite_index,image_speed,x+lengthdir_x(7*point_distance(x,y,FinalX,FinalY)/8,point_direction(x,y,FinalX,FinalY)),y+lengthdir_y(7*point_distance(x,y,FinalX,FinalY)/8,point_direction(x,y,FinalX,FinalY)),1,1,0,c_aqua,.75);
    }
    if i = 8 &amp;&amp; alarm[7] = -1
    {
        draw_set_alpha(1);
        draw_sprite_ext(sprite_index,image_speed,x+lengthdir_x(8*point_distance(x,y,FinalX,FinalY)/8,point_direction(x,y,FinalX,FinalY)),y+lengthdir_y(8*point_distance(x,y,FinalX,FinalY)/8,point_direction(x,y,FinalX,FinalY)),1,1,0,c_aqua,1);
    }


draw_set_alpha(1);

/*else
{

    draw_sprite_ext(sprite_index,i,x,y,1,1,0,c_aqua,.75);
    draw_sprite_ext(sprite_index,i,x+(FinalX-x)/2,y+(FinalY-y)/2,1,1,0,c_aqua,.75);
    draw_sprite_ext(sprite_index,i,x+3*(FinalX-x)/4,y+3*(FinalY-y)/4,1,1,0,c_aqua,.75);
    
}






if i = 0 &amp;&amp; alarm[11] = -1
    {
        draw_sprite_ext(sprite_index,image_speed,x,y,1,1,0,c_aqua,.75);
    }
    if i = 1 &amp;&amp; alarm[0] = -1
    {
        draw_sprite_ext(sprite_index,image_speed,x,y+1*(FinalY-y)/8,1,1,0,c_aqua,.75);
    }
    if i = 2 &amp;&amp; alarm[1] = -1
    {
        draw_sprite_ext(sprite_index,image_speed,x+(FinalX-x)/4,y+(FinalY-y)/4,1,1,0,c_aqua,.75);
    }
    if i = 3 &amp;&amp; alarm[2] = -1
    {
        draw_sprite_ext(sprite_index,image_speed,x+2*(FinalX-x)/8,y+2*(FinalY-y)/8,1,1,0,c_aqua,.75);
    }
    if i = 4 &amp;&amp; alarm[3] = -1
    {
        draw_sprite_ext(sprite_index,image_speed,x+3*(FinalX-x)/8,y+3*(FinalY-y)/8,1,1,0,c_aqua,.75);
    }
    if i = 5 &amp;&amp; alarm[4] = -1
    {
        draw_sprite_ext(sprite_index,image_speed,x+(FinalX-x)/2,y+(FinalY-y)/2,1,1,0,c_aqua,.75);
    }
    if i = 6 &amp;&amp; alarm[5] = -1
    {
        draw_sprite_ext(sprite_index,image_speed,x+5*(FinalX-x)/8,y+5*(FinalY-y)/8,1,1,0,c_aqua,.75);
    }
    if i = 7 &amp;&amp; alarm[6] = -1
    {
        draw_sprite_ext(sprite_index,image_speed,x+3*(FinalX-x)/4,y+3*(FinalY-y)/4,1,1,0,c_aqua,.75);
    }
    if i = 8 &amp;&amp; alarm[7] = -1
    {
        draw_sprite_ext(sprite_index,image_speed,x+7*(FinalX-x)/8,y+7*(FinalY-y)/8,1,1,0,c_aqua,.75);
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
