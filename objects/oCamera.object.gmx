<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sRamaWalkLeft</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>2</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Game Variables

view_object = id;
image_speed = 0;

Character = choose("Riahura");
Set = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Setting up the dynamic camera

if oRama.NPC = -1 
{
    if !instance_exists(oScreenShake)
    {
        PointOneX = mouse_x;
        PointOneY = mouse_y;
        
        PointThreeX = oRama.phy_position_x;
        PointThreeY = oRama.phy_position_y;
        
        //Camera
        PointTwoX = PointThreeX + lengthdir_x(point_distance(PointThreeX,PointThreeY,PointOneX,PointOneY)/4.5,point_direction(PointThreeX,PointThreeY,PointOneX,PointOneY)); 
        PointTwoY = PointThreeY + lengthdir_y(point_distance(PointThreeX,PointThreeY,PointOneX,PointOneY)/4.5,point_direction(PointThreeX,PointThreeY,PointOneX,PointOneY));
    
    
        if distance_to_point(PointTwoX,PointTwoY) &gt;= 10 &amp;&amp; Set = false
        { 
            physics_apply_impulse(x,y,lengthdir_x(100,-point_direction(x,y,PointTwoX,PointTwoY)),lengthdir_y(100,point_direction(x,y,PointTwoX,PointTwoY)));
        } 
        else
        {
    
            phy_position_x = PointTwoX;
            phy_position_y = PointTwoY;
            Set = true;
        
        }
        //Z = choose(1);
    }
}
else
{   
    if distance_to_point(oHaarb.phy_position_x,oHaarb.phy_position_y) &gt; 10
    { 
        physics_apply_impulse(x,y,lengthdir_x(100,-point_direction(x,y,oHaarb.x,oHaarb.y)),lengthdir_y(100,point_direction(x,y,oHaarb.x,oHaarb.y)));
        Set = false;
    }   
}   

view_xview = clamp(view_xview,0,room_width);
view_yview = clamp(view_yview,0,room_height);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw the environment

/*if Character = "Rama"
{
    draw_background_part(bgDesert,0,0,2560,1600,00,0);
    
}
else
{
    draw_background(background3,0,0);

}*/

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>-1</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.00999999977648258</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>20</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>20</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>20,54</point>
    <point>3,30</point>
  </PhysicsShapePoints>
</object>
